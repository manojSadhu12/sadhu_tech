import{l as e,m as t,o as a,n,t as s,p as r,q as o,e as c,s as g,C as $,c as m,d as p,b as i,f,h as d,i as l,S as h,j as u,k as b}from"./client.f707559f.js";import"./Icon.b3087117.js";import"./Button.46d81a0e.js";import"./Image.a80d16de.js";import"./stores.ec09ff7a.js";import{H as w,P as j,N as R,a as S,b as k,C as y}from"./index.b8f1b6e6.js";function v(c){let g;const $=new w({props:{data:"React State",id:"reactState",isBig:"true"}}),m=new j({props:{data:"<p>State refers both the state of UI and data of the application. In React components are having build in state.</p><p><br></p><p>In the previous chapter we have seen props which are managed and passed from outside of the component. But state is created and managed inside of the component. </p>"}}),p=new R({props:{data:'<p>Prior to React 16.8 only Class component supports state. From React 16.8 function components also supports state using a <a href="/courses/reactJs/reactHooks/introductionToReactHooks" target="_blank">React Hook</a> <a href="/courses/reactJs/reactHooks/useStateHook" target="_blank">useState</a>. <strong>So both class components and function components supports state.</strong></p>'}}),i=new j({props:{data:'<p>Visit <a href="/courses/reactJs/reactHooks/useStateHook" target="_blank">useState Hook</a> to learn state in function components.</p>'}}),f=new w({props:{data:"React state in class components",id:"reactStateInClassComponents"}}),d=new j({props:{data:"<p>State is a javascript object which houlds data of the component. When state object changes component re-renders.</p>"}}),l=new w({props:{data:"Creating state object",id:"creatingStateObject"}}),h=new S({props:{language:"javascript",uid:"a60e1d31-2a29-11ea-9a2a-050917cd1181",data:"import React from 'react';\n\nclass Person extends React.Component {\n    state = {\n        name: \"Manoj\",\n        age: 26\n    };\n\n    render() {\n        return <h1>{this.state.name} aged {this.state.age}.</h1>;\n    }\n}\n\nconst element = <Person/>;\nReactDOM.render(element, document.getElementById('root'));",pic:"",ratio:"4",highlight:"4-7,10"}}),u=new j({props:{data:"<p>In the above example lines 4 to 7 shows creating state object, line 10 shows accessing data from state object. This is just creating a Javascript object and accessing its data.</p>"}}),b=new w({props:{data:"Changing the state object",id:"changingTheStateObject"}}),y=new S({props:{language:"javascript",uid:"0f96c1c1-2a2b-11ea-9a2a-050917cd1181",data:"import React from 'react';\n\nclass Person extends React.Component {\n    state = {\n        name: \"Manoj\",\n        age: 26\n    };\n\n    changeAge = (newAge) => {\n        this.setState({\n            age: newAge\n        })\n    };\n\n    render() {\n        console.log(\"Rendering\");\n        return (\n            <div>\n                <h1>{this.state.name} aged {this.state.age}.</h1>\n                <button onClick={e => this.changeAge(28)}>Change age</button>\n            </div>\n        )\n    }\n}\n\nconst element = <Person/>;\nReactDOM.render(element, document.getElementById('root'));",pic:"",ratio:"4",highlight:"10-12,16,20"}}),v=new j({props:{data:'<p>Here on line no 20 on button click we are triggering <em>chaneAge</em> <span style="background-color: rgb(230, 0, 0);"> ES6 function </span>. And changing state is at lines 10 to 12. In <strong>setState() </strong>we are only passing age property, so age property is changed and React takes old value for name automatically.</p>'}}),C=new R({props:{data:"<p>this.state.age = newAge</p><p>This is wrong. Because state cannot be mutated directly we can change state only by <em>setState()</em>.</p>"}}),I=new j({props:{data:"<p>If we execute the above example and open the console we can see the log <strong>Rendering </strong>every time we click on the button <strong>Change age</strong>. </p>"}}),x=new k({props:{pic:"/images/da86ed50-f336-11e9-b4ff-ad48fafeab92___2b1b6080-2a31-11ea-9a2a-050917cd1181.jpg",ratio:"8"}}),H=new j({props:{data:'<p>This is because React calls <strong>render() and other lifecycle methods </strong>when state or props are updated. So UI will always be updated along with data. It sound very inefficient to re-render entire component for state changes. But its not because React uses a concept called Virtual DOM.</p><p><br></p><p>We will introduce you to <a href="/reactJs/course/reactComponents/reactVirtualDOM" target="_blank">Virtual DOM</a> in future chapters.</p>'}});return{c(){e($.$$.fragment),e(m.$$.fragment),e(p.$$.fragment),e(i.$$.fragment),e(f.$$.fragment),e(d.$$.fragment),e(l.$$.fragment),e(h.$$.fragment),e(u.$$.fragment),e(b.$$.fragment),e(y.$$.fragment),e(v.$$.fragment),e(C.$$.fragment),e(I.$$.fragment),e(x.$$.fragment),e(H.$$.fragment)},l(e){t($.$$.fragment,e),t(m.$$.fragment,e),t(p.$$.fragment,e),t(i.$$.fragment,e),t(f.$$.fragment,e),t(d.$$.fragment,e),t(l.$$.fragment,e),t(h.$$.fragment,e),t(u.$$.fragment,e),t(b.$$.fragment,e),t(y.$$.fragment,e),t(v.$$.fragment,e),t(C.$$.fragment,e),t(I.$$.fragment,e),t(x.$$.fragment,e),t(H.$$.fragment,e)},m(e,t){a($,e,t),a(m,e,t),a(p,e,t),a(i,e,t),a(f,e,t),a(d,e,t),a(l,e,t),a(h,e,t),a(u,e,t),a(b,e,t),a(y,e,t),a(v,e,t),a(C,e,t),a(I,e,t),a(x,e,t),a(H,e,t),g=!0},p:n,i(e){g||(s($.$$.fragment,e),s(m.$$.fragment,e),s(p.$$.fragment,e),s(i.$$.fragment,e),s(f.$$.fragment,e),s(d.$$.fragment,e),s(l.$$.fragment,e),s(h.$$.fragment,e),s(u.$$.fragment,e),s(b.$$.fragment,e),s(y.$$.fragment,e),s(v.$$.fragment,e),s(C.$$.fragment,e),s(I.$$.fragment,e),s(x.$$.fragment,e),s(H.$$.fragment,e),g=!0)},o(e){r($.$$.fragment,e),r(m.$$.fragment,e),r(p.$$.fragment,e),r(i.$$.fragment,e),r(f.$$.fragment,e),r(d.$$.fragment,e),r(l.$$.fragment,e),r(h.$$.fragment,e),r(u.$$.fragment,e),r(b.$$.fragment,e),r(y.$$.fragment,e),r(v.$$.fragment,e),r(C.$$.fragment,e),r(I.$$.fragment,e),r(x.$$.fragment,e),r(H.$$.fragment,e),g=!1},d(e){o($,e),o(m,e),o(p,e),o(i,e),o(f,e),o(d,e),o(l,e),o(h,e),o(u,e),o(b,e),o(y,e),o(v,e),o(C,e),o(I,e),o(x,e),o(H,e)}}}function C(n){let h,u,b;const w=new y({props:{$$slots:{default:[v]},$$scope:{ctx:n}}});return{c(){h=c("meta"),u=g(),e(w.$$.fragment),this.h()},l(e){const a=$('[data-svelte="svelte-gl6zst"]',document.head);h=m(a,"META",{name:!0,content:!0}),a.forEach(p),u=i(e),t(w.$$.fragment,e),this.h()},h(){document.title="React State",f(h,"name","description"),f(h,"content","React State")},m(e,t){d(document.head,h),l(e,u,t),a(w,e,t),b=!0},p(e,[t]){const a={};1&t&&(a.$$scope={dirty:t,ctx:e}),w.$set(a)},i(e){b||(s(w.$$.fragment,e),b=!0)},o(e){r(w.$$.fragment,e),b=!1},d(e){p(h),e&&p(u),o(w,e)}}}export default class extends h{constructor(e){super(),u(this,e,null,C,b,{})}}
