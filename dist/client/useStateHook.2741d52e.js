import{u as e,v as t,i as a,d as n,l as s,m as r,o,t as i,p,q as m,e as c,s as g,C as l,c as $,b as u,f,h as d,S as h,j as b,k as S}from"./client.9c259cf4.js";import"./Icon.680bd4d0.js";import"./Button.44f5306d.js";import"./Image.c8019b1e.js";import"./stores.2b7dbef2.js";import{H as w,P as y,a as x,N as k,C as j}from"./index.7beba4f9.js";function T(s){let r;return{c(){r=e("<p>In the above example</p><p>At line number 1 <strong>useState </strong>is imported from 'react'.</p><p>At line number 5 we have used <strong>useState(),</strong> passed locale string as initial state, the returned <span style=\"background-color: rgb(230, 0, 0);\">array is destructured</span> into <strong>time </strong>and <strong>setTime</strong>.</p><p>At line number 7 <strong>setTime() </strong>is called by passing a new locale string (new state). </p><p><br></p><p>This is a simple example where state is a String.</p>'>")},l(e){r=t(e,"<p>In the above example</p><p>At line number 1 <strong>useState </strong>is imported from 'react'.</p><p>At line number 5 we have used <strong>useState(),</strong> passed locale string as initial state, the returned <span style=\"background-color: rgb(230, 0, 0);\">array is destructured</span> into <strong>time </strong>and <strong>setTime</strong>.</p><p>At line number 7 <strong>setTime() </strong>is called by passing a new locale string (new state). </p><p><br></p><p>This is a simple example where state is a String.</p>'>")},m(e,t){a(e,r,t)},d(e){e&&n(r)}}}function v(e){let t;const a=new w({props:{data:"useState",id:"useState",isBig:"true"}}),n=new y({props:{data:'<p><em style="background-color: rgb(0, 0, 0); color: rgb(255, 255, 255);"> useState </em> allow us to manage state in function components.</p>'}}),c=new x({props:{language:"javascript",uid:"ac6ac931-44aa-11ea-91b3-a9af29f9087c",data:"/**\n * initialState, we have to pass the initialState,\n *\n * @returns [], This array contains exactly 2 things,\n *              array[0] is the currentState,\n *              array[1] is the setter function to update state\n */\nfunction useState(initialState): [state, function]",pic:"",ratio:"4",highlight:""}}),g=new y({props:{data:"<p><strong>useState</strong> accepts initial state and it returns an array with 2 things in it.</p><p>The element in the first index of this array is the current state.</p><p>The element in the second index of this array is the function that can update the state.</p>"}}),l=new w({props:{data:"A simple useState hook example",id:"aSimpleUseStateHookExample"}}),$=new x({props:{language:"javascript",uid:"14167061-44ac-11ea-91b3-a9af29f9087c",data:"import React, {useState} from 'react';\nimport ReactDOM from \"react-dom\";\n\nexport const Example = (props) => {\n    const [time, setTime] = useState(new Date().toLocaleString());\n    setTimeout(() => {\n        setTime(new Date().toLocaleString())\n    }, 1000);\n\n    return <p>{time}</p>\n};\n\nReactDOM.render(<Example/>, document.getElementById('root'));",pic:"",ratio:"4",highlight:"1,5,7"}}),u=new y({props:{data:"<p>In the above example</p><p>At line number 1 <strong>useState </strong>is imported from 'react'.</p><p>At line number 5 we have used <strong>useState,</strong> passed locale string as initial state and the returned <span style=\"background-color: rgb(230, 0, 0);\">array is destructured</span> into <strong>time</strong>,<strong> setTime</strong>.</p><p>At line number 7 <strong>setTime </strong>is called by passing a new locale string (new state). </p><p><br></p><p>This is a simple example where state is a String.</p>",$$slots:{default:[T]},$$scope:{ctx:e}}}),f=new w({props:{data:"Working with useState when state is a JSON object ",id:"workingWithUseStateWhenStateIsAJSONObject "}}),d=new x({props:{language:"javascript",uid:"8804b621-5074-11ea-ba21-45208ccf3b2e",data:"import React, {useState} from 'react';\nimport ReactDOM from \"react-dom\";\n\nexport const ExampleWithJSONObject = (props) => {\n    const [person, setPerson] = useState({\n        name: \"Manoj\",\n        age: 25\n    });\n\n    return (\n        <React.Fragment>\n            <p>{person.name} - {person.age}</p>\n            <button onClick={() => setPerson({...person, age: 26})}>Change age</button>\n        </React.Fragment>\n    )\n};\n\nReactDOM.render(<ExampleWithJSONObject/>, document.getElementById('root'));",pic:"",ratio:"4",highlight:"13"}}),h=new y({props:{data:'<p>Observe line no 13 <em style="background-color: black;"> setPerson({...person, age: 26}) </em>. Here we are spreading previous state (i.e, <em>person</em>) and then changed age property. This is because <em style="background-color: black;"> setPerson() </em><em> </em>completely replaces existing state. As we want to preserve <span style="background-color: black;"> person.name </span> we are spreading <span style="background-color: black;"> person </span> (i.e, old state).</p><p><br></p>'}}),b=new k({props:{data:"<p>The setter function to update state expects a new state and completely replaces the old state. That means it does not merge state we have to do it manually.</p>"}}),S=new y({props:{data:"<p>The setter function of updating state also accepts function, we can get the current state in thhis function as argument.</p>"}}),j=new x({props:{language:"javascript",uid:"09c63751-5602-11ea-8985-87230e28999c",data:"import React, {useState} from 'react';\nimport ReactDOM from \"react-dom\";\n\nexport const ExampleWithJSONObject = (props) => {\n    const [person, setPerson] = useState({\n        name: \"Manoj\",\n        age: 25\n    });\n\n    return (\n        <React.Fragment>\n            <p>{person.name} - {person.age}</p>\n            <button onClick={() => setPerson(currentPerson => {return {...currentPerson, age: 26} })}>Change age</button>\n        </React.Fragment>\n    )\n};\n\nReactDOM.render(<ExampleWithJSONObject/>, document.getElementById('root'));",pic:"",ratio:"4",highlight:"13"}}),v=new y({props:{data:'<p>This example is same as the previous one but at line no 13 we have passed function to <span style="background-color: black;"> </span><em style="background-color: black;">setPerson()</em><span style="background-color: black;"> </span>.</p><p><br></p>'}}),O=new w({props:{data:"Summary of useState() Hook",id:"summaryOfUseStateHook"}}),R=new y({props:{data:"<ul><li>Lets you add state for function components.</li><li>You can add mutiple useState() hooks in a single function component.</li><li>Unlike state in class useState() accepts number, string, object, Array as state.</li><li>First element is the currentState and the second element is the setter function of state.</li><li>Setter function accepts new state or a function that returns new state. If you depend on the existing state its prefered to pass function to the setter function.</li></ul>"}});return{c(){s(a.$$.fragment),s(n.$$.fragment),s(c.$$.fragment),s(g.$$.fragment),s(l.$$.fragment),s($.$$.fragment),s(u.$$.fragment),s(f.$$.fragment),s(d.$$.fragment),s(h.$$.fragment),s(b.$$.fragment),s(S.$$.fragment),s(j.$$.fragment),s(v.$$.fragment),s(O.$$.fragment),s(R.$$.fragment)},l(e){r(a.$$.fragment,e),r(n.$$.fragment,e),r(c.$$.fragment,e),r(g.$$.fragment,e),r(l.$$.fragment,e),r($.$$.fragment,e),r(u.$$.fragment,e),r(f.$$.fragment,e),r(d.$$.fragment,e),r(h.$$.fragment,e),r(b.$$.fragment,e),r(S.$$.fragment,e),r(j.$$.fragment,e),r(v.$$.fragment,e),r(O.$$.fragment,e),r(R.$$.fragment,e)},m(e,s){o(a,e,s),o(n,e,s),o(c,e,s),o(g,e,s),o(l,e,s),o($,e,s),o(u,e,s),o(f,e,s),o(d,e,s),o(h,e,s),o(b,e,s),o(S,e,s),o(j,e,s),o(v,e,s),o(O,e,s),o(R,e,s),t=!0},p(e,t){const a={};1&t&&(a.$$scope={dirty:t,ctx:e}),u.$set(a)},i(e){t||(i(a.$$.fragment,e),i(n.$$.fragment,e),i(c.$$.fragment,e),i(g.$$.fragment,e),i(l.$$.fragment,e),i($.$$.fragment,e),i(u.$$.fragment,e),i(f.$$.fragment,e),i(d.$$.fragment,e),i(h.$$.fragment,e),i(b.$$.fragment,e),i(S.$$.fragment,e),i(j.$$.fragment,e),i(v.$$.fragment,e),i(O.$$.fragment,e),i(R.$$.fragment,e),t=!0)},o(e){p(a.$$.fragment,e),p(n.$$.fragment,e),p(c.$$.fragment,e),p(g.$$.fragment,e),p(l.$$.fragment,e),p($.$$.fragment,e),p(u.$$.fragment,e),p(f.$$.fragment,e),p(d.$$.fragment,e),p(h.$$.fragment,e),p(b.$$.fragment,e),p(S.$$.fragment,e),p(j.$$.fragment,e),p(v.$$.fragment,e),p(O.$$.fragment,e),p(R.$$.fragment,e),t=!1},d(e){m(a,e),m(n,e),m(c,e),m(g,e),m(l,e),m($,e),m(u,e),m(f,e),m(d,e),m(h,e),m(b,e),m(S,e),m(j,e),m(v,e),m(O,e),m(R,e)}}}function O(e){let t,h,b;const S=new j({props:{$$slots:{default:[v]},$$scope:{ctx:e}}});return{c(){t=c("meta"),h=g(),s(S.$$.fragment),this.h()},l(e){const a=l('[data-svelte="svelte-14lyfyj"]',document.head);t=$(a,"META",{name:!0,content:!0}),a.forEach(n),h=u(e),r(S.$$.fragment,e),this.h()},h(){document.title="React useState",f(t,"name","description"),f(t,"content","React useState")},m(e,n){d(document.head,t),a(e,h,n),o(S,e,n),b=!0},p(e,[t]){const a={};1&t&&(a.$$scope={dirty:t,ctx:e}),S.$set(a)},i(e){b||(i(S.$$.fragment,e),b=!0)},o(e){p(S.$$.fragment,e),b=!1},d(e){n(t),e&&n(h),m(S,e)}}}export default class extends h{constructor(e){super(),b(this,e,null,O,S,{})}}
