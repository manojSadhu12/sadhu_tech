import{l as e,m as a,o as n,n as t,t as r,p as o,q as s,e as p,s as c,C as d,c as i,d as l,b as g,f as m,h as $,i as f,S as h,j as u,k as b}from"./client.9c259cf4.js";import"./Icon.680bd4d0.js";import"./Button.44f5306d.js";import"./Image.c8019b1e.js";import"./stores.2b7dbef2.js";import{H as w,P as k,a as y,C as v}from"./index.7beba4f9.js";function R(p){let c;const d=new w({props:{data:"React Props",id:"reactProps",isBig:"true"}}),i=new k({props:{data:"<p>In React we call HTML attributes as props. We can pass props same as HTML attribues to configure Components.</p>"}}),l=new w({props:{data:"Handling props in React function component",id:"handlingPropsInReactFunctionComponent"}}),g=new y({props:{language:"html",uid:"40c29b01-2a05-11ea-9a2a-050917cd1181",data:'const Person = (props) => {\n    return <h1>{props.name} aged {props.age}.</h1>;\n};\n\nconst element = <Person name="Manoj" age="25"/>;\nReactDOM.render(element, document.getElementById(\'root\'));',pic:"",ratio:"4",highlight:"1,2,5"}}),m=new k({props:{data:'<p>Passing props is same as passing attributes in HTML (observe line no 5).</p><p>React takes all the props given in JSX (line no 5) and pass them as a Javascript object to the function component as an argument (observe line no 1)</p><p>And we have used this <span style="background-color: black; color: rgb(255, 255, 255);"> props object </span> in line no 2.</p>'}}),$=new w({props:{data:"Handling props in React Class component",id:"handlingPropsInReactClassComponent"}}),f=new y({props:{language:"javascript",uid:"d9dc3841-2a06-11ea-9a2a-050917cd1181",data:'class Person extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return <h1>{this.props.name} aged {this.props.age}.</h1>;\n    }\n}\n\nconst element = <Person name="Manoj" age="25"/>;\nReactDOM.render(element, document.getElementById(\'root\'));',pic:"",ratio:"4",highlight:"2-4,10"}}),h=new k({props:{data:'<p>React takes all the props given in JSX (line no 10) and pass them as a Javascript object to the class component constructor (observe line no 2).</p><p>Here to access props we are using <span style="background-color: black;"> </span><span style="background-color: black; color: rgb(255, 255, 255);">this</span><span style="background-color: black;"> </span>. Ths is because <span style="background-color: black;"> </span><span style="background-color: black; color: rgb(255, 255, 255);">this</span><span style="background-color: black;"> </span> is needed to access variables in <span style="background-color: rgb(230, 0, 0);">ES6 class</span>.</p><p>In this example we are just calling the super constructor so we can remove constructor.</p>'}}),u=new y({props:{language:"javascript",uid:"b28cefe1-2a07-11ea-9a2a-050917cd1181",data:'class Person extends React.Component {\n    render() {\n        return <h1>{this.props.name} aged {this.props.age}.</h1>;\n    }\n}\n\nconst element = <Person name="Manoj" age="25"/>;\nReactDOM.render(element, document.getElementById(\'root\'));',pic:"",ratio:"4",highlight:""}}),b=new w({props:{data:"React children prop",id:"reactChildrenProp"}}),v=new k({props:{data:'<p>If we want to pass some children to a component we can pass them in the body past of the JSX and this body will be collected as <span style="background-color: black;"> </span><span style="background-color: black; color: rgb(255, 255, 255);">children</span><span style="background-color: black;"> </span> prop in the component.</p>'}}),R=new y({props:{language:"javascript",uid:"3dc52df1-2a0f-11ea-9a2a-050917cd1181",data:'class Person extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>{this.props.name} aged {this.props.age}.</h1>\n                <p>{this.props.children}</p>\n            </div>\n        );\n    }\n}\n\nconst element = <Person name="Manoj" age="25">Some extra information about this person.</Person>\nReactDOM.render(element, document.getElementById(\'root\'));',pic:"/images/da86ed50-f336-11e9-b4ff-ad48fafeab92___08d535b0-2a12-11ea-9a2a-050917cd1181.jpg",ratio:"8",highlight:"6,12"}}),j=new k({props:{data:'<p>In Line no 12 we have passed some info about the person in the body past. And we are using this in line no 6 as  <span style="background-color: black;"> </span><span style="background-color: black; color: rgb(255, 255, 255);">this.props.children</span><span style="background-color: black;"> </span>.</p><p>Children can be a simple string or even a nested JSX.</p>'}}),P=new w({props:{data:"React Props are read only",id:"reactPropsAreReadOnly"}}),I=new k({props:{data:'<p>React props should not be modified in components.</p><p><br></p><p>In React, props flow downward, from parent to child. This means that when we call <span style="background-color: black; color: rgb(255, 255, 255);"> ReactDOM.render() </span>, React renders the root node, pass down any props, and then forget about that node. This happens at each component, we render it, then move on down the tree.</p><p><br></p><p>If a component could mutate its props, we would be changing an object that is accessible to the parent node, even after the parent node had already rendered. This could cause all sorts of strange behaviour, for example, a <span style="background-color: black; color: rgb(255, 255, 255);"> user.name </span> might have one value in one part of the app, and a different value in a different part, and it might update itself the next time a render is triggered.</p><p><br></p><p>But UI can change dynamically so components should change its UI dynamically. To do this we make use of <a href="/reactJs/course/reactComponents/reactState" target="_blank">state</a> without changing the props.</p>'}});return{c(){e(d.$$.fragment),e(i.$$.fragment),e(l.$$.fragment),e(g.$$.fragment),e(m.$$.fragment),e($.$$.fragment),e(f.$$.fragment),e(h.$$.fragment),e(u.$$.fragment),e(b.$$.fragment),e(v.$$.fragment),e(R.$$.fragment),e(j.$$.fragment),e(P.$$.fragment),e(I.$$.fragment)},l(e){a(d.$$.fragment,e),a(i.$$.fragment,e),a(l.$$.fragment,e),a(g.$$.fragment,e),a(m.$$.fragment,e),a($.$$.fragment,e),a(f.$$.fragment,e),a(h.$$.fragment,e),a(u.$$.fragment,e),a(b.$$.fragment,e),a(v.$$.fragment,e),a(R.$$.fragment,e),a(j.$$.fragment,e),a(P.$$.fragment,e),a(I.$$.fragment,e)},m(e,a){n(d,e,a),n(i,e,a),n(l,e,a),n(g,e,a),n(m,e,a),n($,e,a),n(f,e,a),n(h,e,a),n(u,e,a),n(b,e,a),n(v,e,a),n(R,e,a),n(j,e,a),n(P,e,a),n(I,e,a),c=!0},p:t,i(e){c||(r(d.$$.fragment,e),r(i.$$.fragment,e),r(l.$$.fragment,e),r(g.$$.fragment,e),r(m.$$.fragment,e),r($.$$.fragment,e),r(f.$$.fragment,e),r(h.$$.fragment,e),r(u.$$.fragment,e),r(b.$$.fragment,e),r(v.$$.fragment,e),r(R.$$.fragment,e),r(j.$$.fragment,e),r(P.$$.fragment,e),r(I.$$.fragment,e),c=!0)},o(e){o(d.$$.fragment,e),o(i.$$.fragment,e),o(l.$$.fragment,e),o(g.$$.fragment,e),o(m.$$.fragment,e),o($.$$.fragment,e),o(f.$$.fragment,e),o(h.$$.fragment,e),o(u.$$.fragment,e),o(b.$$.fragment,e),o(v.$$.fragment,e),o(R.$$.fragment,e),o(j.$$.fragment,e),o(P.$$.fragment,e),o(I.$$.fragment,e),c=!1},d(e){s(d,e),s(i,e),s(l,e),s(g,e),s(m,e),s($,e),s(f,e),s(h,e),s(u,e),s(b,e),s(v,e),s(R,e),s(j,e),s(P,e),s(I,e)}}}function j(t){let h,u,b;const w=new v({props:{$$slots:{default:[R]},$$scope:{ctx:t}}});return{c(){h=p("meta"),u=c(),e(w.$$.fragment),this.h()},l(e){const n=d('[data-svelte="svelte-1dcqpn7"]',document.head);h=i(n,"META",{name:!0,content:!0}),n.forEach(l),u=g(e),a(w.$$.fragment,e),this.h()},h(){document.title="React Props",m(h,"name","description"),m(h,"content","React Props")},m(e,a){$(document.head,h),f(e,u,a),n(w,e,a),b=!0},p(e,[a]){const n={};1&a&&(n.$$scope={dirty:a,ctx:e}),w.$set(n)},i(e){b||(r(w.$$.fragment,e),b=!0)},o(e){o(w.$$.fragment,e),b=!1},d(e){l(h),e&&l(u),s(w,e)}}}export default class extends h{constructor(e){super(),u(this,e,null,j,b,{})}}
