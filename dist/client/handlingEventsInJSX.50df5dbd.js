import{l as t,m as n,o as a,n as e,t as r,p as o,q as s,e as $,s as d,C as g,c as i,d as m,b as c,f,h as p,i as l,S as u,j as h,k as b}from"./client.9c259cf4.js";import"./Icon.680bd4d0.js";import"./Button.44f5306d.js";import"./Image.c8019b1e.js";import"./stores.2b7dbef2.js";import{H as v,N as w,P as C,a as j,C as T}from"./index.7beba4f9.js";function x($){let d;const g=new v({props:{data:"Handling events in JSX",id:"handlingEventsInJSX",isBig:"true"}}),i=new w({props:{data:"<ul><li>In React all event names should be written in camelCase.</li><li>Function should be passed inside curly braces instead of a string.</li></ul>"}}),m=new v({props:{data:"Syntax for writing events",id:"syntaxForWritingEvents"}}),c=new C({props:{data:"<h4>Traditional way:</h4>"}}),f=new j({props:{language:"html",uid:"a43f3861-247d-11ea-bbd2-61a33c3c38b4",data:'<button onclick="addToCart()"> Add to cart </button>',pic:"",ratio:"4",highlight:""}}),p=new C({props:{data:"<h4>React's way:</h4>"}}),l=new j({props:{language:"html",uid:"f0789e11-247d-11ea-bbd2-61a33c3c38b4",data:"<button onClick={addToCart}> Add to cart </button>",pic:"",ratio:"4",highlight:""}}),u=new C({props:{data:"<h4>Difference:</h4><p><strong>onclick</strong> as <strong><em>onClick</em></strong></p><p><strong>addToCart()</strong> as <strong><em>{addToCart}</em></strong></p><p><br></p><p>React passes event object to the function</p>"}}),h=new j({props:{language:"javascript",uid:"db86a1e1-291f-11ea-8b52-59126e35917d",data:"class App extends React.Component {\n    addToCart(e) { \n        //Some code to add to cart\n        console.log(e)\n    }\n\n    render() {\n        return (\n            <button onClick={this.addToCart}>Add to cart</button>\n        )\n    }\n}",pic:"",ratio:"4",highlight:""}}),b=new v({props:{data:"Pass custom values to handle event in JSX",id:"passCustomValuesToHandleEventInJSX"}}),T=new j({props:{language:"javascript",uid:"4bf28a21-2920-11ea-8b52-59126e35917d",data:"class App extends React.Component {\n    addToCart(productInfo, e) {\n        //Some code to add to cart \n    }\n\n    render() {\n        return (\n            <button onClick={e => this.addToCart(productInfo, e)}\n            > Add to cart </button>\n        )\n    }\n}",pic:"",ratio:"4",highlight:""}}),x=new C({props:{data:'<p>Here we have taken a nameless <span style="background-color: rgb(230, 0, 0);"> arrow function </span> as event handler function which collects the default event object and passed a custom value and event object to the actual functional handler function.</p>'}});return{c(){t(g.$$.fragment),t(i.$$.fragment),t(m.$$.fragment),t(c.$$.fragment),t(f.$$.fragment),t(p.$$.fragment),t(l.$$.fragment),t(u.$$.fragment),t(h.$$.fragment),t(b.$$.fragment),t(T.$$.fragment),t(x.$$.fragment)},l(t){n(g.$$.fragment,t),n(i.$$.fragment,t),n(m.$$.fragment,t),n(c.$$.fragment,t),n(f.$$.fragment,t),n(p.$$.fragment,t),n(l.$$.fragment,t),n(u.$$.fragment,t),n(h.$$.fragment,t),n(b.$$.fragment,t),n(T.$$.fragment,t),n(x.$$.fragment,t)},m(t,n){a(g,t,n),a(i,t,n),a(m,t,n),a(c,t,n),a(f,t,n),a(p,t,n),a(l,t,n),a(u,t,n),a(h,t,n),a(b,t,n),a(T,t,n),a(x,t,n),d=!0},p:e,i(t){d||(r(g.$$.fragment,t),r(i.$$.fragment,t),r(m.$$.fragment,t),r(c.$$.fragment,t),r(f.$$.fragment,t),r(p.$$.fragment,t),r(l.$$.fragment,t),r(u.$$.fragment,t),r(h.$$.fragment,t),r(b.$$.fragment,t),r(T.$$.fragment,t),r(x.$$.fragment,t),d=!0)},o(t){o(g.$$.fragment,t),o(i.$$.fragment,t),o(m.$$.fragment,t),o(c.$$.fragment,t),o(f.$$.fragment,t),o(p.$$.fragment,t),o(l.$$.fragment,t),o(u.$$.fragment,t),o(h.$$.fragment,t),o(b.$$.fragment,t),o(T.$$.fragment,t),o(x.$$.fragment,t),d=!1},d(t){s(g,t),s(i,t),s(m,t),s(c,t),s(f,t),s(p,t),s(l,t),s(u,t),s(h,t),s(b,t),s(T,t),s(x,t)}}}function S(e){let u,h,b;const v=new T({props:{$$slots:{default:[x]},$$scope:{ctx:e}}});return{c(){u=$("meta"),h=d(),t(v.$$.fragment),this.h()},l(t){const a=g('[data-svelte="svelte-ifxnqr"]',document.head);u=i(a,"META",{name:!0,content:!0}),a.forEach(m),h=c(t),n(v.$$.fragment,t),this.h()},h(){document.title="Handling events in JSX",f(u,"name","description"),f(u,"content","Handling events in JSX")},m(t,n){p(document.head,u),l(t,h,n),a(v,t,n),b=!0},p(t,[n]){const a={};1&n&&(a.$$scope={dirty:n,ctx:t}),v.$set(a)},i(t){b||(r(v.$$.fragment,t),b=!0)},o(t){o(v.$$.fragment,t),b=!1},d(t){m(u),t&&m(h),s(v,t)}}}export default class extends u{constructor(t){super(),h(this,t,null,S,b,{})}}
