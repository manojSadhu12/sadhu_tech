import{l as e,m as a,o as t,n as r,t as n,p as s,q as o,e as i,s as l,C as p,c,d as $,b as d,f as g,h as m,i as f,S as h,j as u,k as b}from"./client.9c259cf4.js";import"./Icon.680bd4d0.js";import"./Button.44f5306d.js";import"./Image.c8019b1e.js";import"./stores.2b7dbef2.js";import{H as w,P as y,a as k,C as v}from"./index.7beba4f9.js";function S(i){let l;const p=new w({props:{data:"JSX Attributes or Props",id:"jSXAttributesOrProps",isBig:"true"}}),c=new w({props:{data:"Difference in props in HTML and JSX",id:"differenceInPropsInHTMLAndJSX"}}),$=new y({props:{data:"<ul><li>In React all attributes/props should be camel cased. But there is an exception for aria-* and data-*, they should be used in lower case. So aria-valuemax should be aria-valuemax. These are the attributes that React supports in camel case.</li></ul>"}}),d=new k({props:{language:"html",uid:"1cbf10a1-1ee1-11ea-9f91-6bb67c0552fe",data:"accept acceptCharset accessKey action allowFullScreen alt async autoComplete\nautoFocus autoPlay capture cellPadding cellSpacing challenge charSet checked\ncite classID className colSpan cols content contentEditable contextMenu controls\ncontrolsList coords crossOrigin data dateTime default defer dir disabled\ndownload draggable encType form formAction formEncType formMethod formNoValidate\nformTarget frameBorder headers height hidden high href hrefLang htmlFor\nhttpEquiv icon id inputMode integrity is keyParams keyType kind label lang list\nloop low manifest marginHeight marginWidth max maxLength media mediaGroup method\nmin minLength multiple muted name noValidate nonce open optimum pattern\nplaceholder poster preload profile radioGroup readOnly rel required reversed\nrole rowSpan rows sandbox scope scoped scrolling seamless selected shape size\nsizes span spellCheck src srcDoc srcLang srcSet start step style summary\ntabIndex target title type useMap value width wmode wrap",pic:"",ratio:"4",highlight:""}}),g=new y({props:{data:'<ul><li>We know that JSX is also Javascript. And Javascript is having keyworks like <span style="background-color: black;"> class </span> and <span style="background-color: black;"> for </span> which HTML is also having. So these 2 keywords cannot be used in JSX. JSX is having an alternate for them.</li></ul><p><span style="color: rgb(0, 102, 204);">     class </span>should be written as<span style="color: rgb(0, 102, 204);"> </span><span style="color: rgb(0, 138, 0);">className</span></p><p><span style="color: rgb(0, 102, 204);">     for </span>should be written as<span style="color: rgb(0, 102, 204);"> </span><span style="color: rgb(0, 138, 0);">htmlFor</span></p><ul><li><span style="color: rgb(0, 102, 204);">innerHTML</span> should be written as<span style="color: rgb(0, 102, 204);"> </span><span style="color: rgb(0, 138, 0);">dangerouslySetInnerHTML </span>because react wants to remind setting HTML directly from code is risky because of <a href="https://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank">Cross-site scripting attack</a>.</li></ul>'}}),m=new k({props:{language:"javascript",uid:"725f4821-1e52-11ea-99ca-1504ef5a6ee0",data:"function createMarkup() {\n    return {__html: '&quot;Hello world&quot;'};\n}\n\nconst HelloWorld = <div dangerouslySetInnerHTML={createMarkup()}/>;",pic:"",ratio:"4",highlight:""}}),f=new y({props:{data:'<p>Observe the above example, HTML should be give as an object with <span style="background-color: black;"> __html </span> key.</p>'}}),h=new w({props:{data:"How to set value for JSX props",id:"howToSetValueForJSXProps"}}),u=new y({props:{data:"<h4>Setting static value</h4>"}}),b=new k({props:{language:"html",uid:"6668eb70-1ed9-11ea-9f91-6bb67c0552fe",data:'const hello = <li value="t1">Hello</li>;',pic:"",ratio:"4",highlight:""}}),v=new y({props:{data:"<p>Observer the above code, this is like regular HTML and works as expected.</p><p><br></p><h4>Setting dynamic value</h4>"}}),S=new k({props:{language:"javascript",uid:"b171c061-1ed9-11ea-9f91-6bb67c0552fe",data:'const isConditionTrue = true;\nconst hello = <li value={isConditionTrue ? "t1" : "t2"}>Hello</li>;',pic:"",ratio:"4",highlight:""}}),T=new y({props:{data:"<p>In React dynamic content should be wrapped inside curly braces {}. Here we have used Javascript ternary operator, so conditionally we have given the value.</p><p><br></p><h4>Empty prop</h4>"}}),H=new k({props:{language:"html",uid:"b058eb71-1edb-11ea-9f91-6bb67c0552fe",data:'const termsAndConditions = <input type="checkbox" defaultChecked/>;',pic:"",ratio:"4",highlight:""}}),x=new y({props:{data:'<p>Here the prop <span style="background-color: black;"> defaultChecked </span> is left empty. In this case React will give <span style="background-color: black;"> true </span> as value to this prop. So the above JSX will be transformed to</p>'}}),M=new k({props:{language:"javascript",uid:"d5ece7e1-1edd-11ea-9f91-6bb67c0552fe",data:"const termsAndConditions = React.createElement(\n    'input',\n    {\n        type: 'checkbox',\n        defaultChecked: true\n    });",pic:"",ratio:"4",highlight:"5"}}),J=new w({props:{data:"New Props in React",id:"newPropsInReact"}}),L=new y({props:{data:'<p>React provides  2 new props that are not there in HTML.</p><p>1) <a href="/reactJs/course/reactJSX/jSXListAndKeys" target="_blank">key</a></p><p>2) <a href="https://reactjs.org/docs/refs-and-the-dom.html" target="_blank">ref</a></p>'}});return{c(){e(p.$$.fragment),e(c.$$.fragment),e($.$$.fragment),e(d.$$.fragment),e(g.$$.fragment),e(m.$$.fragment),e(f.$$.fragment),e(h.$$.fragment),e(u.$$.fragment),e(b.$$.fragment),e(v.$$.fragment),e(S.$$.fragment),e(T.$$.fragment),e(H.$$.fragment),e(x.$$.fragment),e(M.$$.fragment),e(J.$$.fragment),e(L.$$.fragment)},l(e){a(p.$$.fragment,e),a(c.$$.fragment,e),a($.$$.fragment,e),a(d.$$.fragment,e),a(g.$$.fragment,e),a(m.$$.fragment,e),a(f.$$.fragment,e),a(h.$$.fragment,e),a(u.$$.fragment,e),a(b.$$.fragment,e),a(v.$$.fragment,e),a(S.$$.fragment,e),a(T.$$.fragment,e),a(H.$$.fragment,e),a(x.$$.fragment,e),a(M.$$.fragment,e),a(J.$$.fragment,e),a(L.$$.fragment,e)},m(e,a){t(p,e,a),t(c,e,a),t($,e,a),t(d,e,a),t(g,e,a),t(m,e,a),t(f,e,a),t(h,e,a),t(u,e,a),t(b,e,a),t(v,e,a),t(S,e,a),t(T,e,a),t(H,e,a),t(x,e,a),t(M,e,a),t(J,e,a),t(L,e,a),l=!0},p:r,i(e){l||(n(p.$$.fragment,e),n(c.$$.fragment,e),n($.$$.fragment,e),n(d.$$.fragment,e),n(g.$$.fragment,e),n(m.$$.fragment,e),n(f.$$.fragment,e),n(h.$$.fragment,e),n(u.$$.fragment,e),n(b.$$.fragment,e),n(v.$$.fragment,e),n(S.$$.fragment,e),n(T.$$.fragment,e),n(H.$$.fragment,e),n(x.$$.fragment,e),n(M.$$.fragment,e),n(J.$$.fragment,e),n(L.$$.fragment,e),l=!0)},o(e){s(p.$$.fragment,e),s(c.$$.fragment,e),s($.$$.fragment,e),s(d.$$.fragment,e),s(g.$$.fragment,e),s(m.$$.fragment,e),s(f.$$.fragment,e),s(h.$$.fragment,e),s(u.$$.fragment,e),s(b.$$.fragment,e),s(v.$$.fragment,e),s(S.$$.fragment,e),s(T.$$.fragment,e),s(H.$$.fragment,e),s(x.$$.fragment,e),s(M.$$.fragment,e),s(J.$$.fragment,e),s(L.$$.fragment,e),l=!1},d(e){o(p,e),o(c,e),o($,e),o(d,e),o(g,e),o(m,e),o(f,e),o(h,e),o(u,e),o(b,e),o(v,e),o(S,e),o(T,e),o(H,e),o(x,e),o(M,e),o(J,e),o(L,e)}}}function T(r){let h,u,b;const w=new v({props:{$$slots:{default:[S]},$$scope:{ctx:r}}});return{c(){h=i("meta"),u=l(),e(w.$$.fragment),this.h()},l(e){const t=p('[data-svelte="svelte-xouuov"]',document.head);h=c(t,"META",{name:!0,content:!0}),t.forEach($),u=d(e),a(w.$$.fragment,e),this.h()},h(){document.title="JSX Attributes or Props",g(h,"name","description"),g(h,"content","JSX Attributes or Props")},m(e,a){m(document.head,h),f(e,u,a),t(w,e,a),b=!0},p(e,[a]){const t={};1&a&&(t.$$scope={dirty:a,ctx:e}),w.$set(t)},i(e){b||(n(w.$$.fragment,e),b=!0)},o(e){s(w.$$.fragment,e),b=!1},d(e){$(h),e&&$(u),o(w,e)}}}export default class extends h{constructor(e){super(),u(this,e,null,T,b,{})}}
