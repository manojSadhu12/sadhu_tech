import{l as e,m as n,o as t,n as a,t as r,p,q as s,e as $,s as m,C as o,c as l,d as g,b as c,f as i,h as f,i as u,S as d,j as h,k as b}from"./client.9c259cf4.js";import"./Icon.680bd4d0.js";import"./Button.44f5306d.js";import"./Image.c8019b1e.js";import"./stores.2b7dbef2.js";import{H as w,a as k,P as y,C as E}from"./index.7beba4f9.js";function R($){let m;const o=new w({props:{data:"Return multiple JSX elements in React",id:"returnMultipleJSXElementsInReact",isBig:"true"}}),l=new w({props:{data:"Return multiple JSX elements as array",id:"returnMultipleJSXElementsAsArray"}}),g=new k({props:{language:"html",uid:"c803c681-19bf-11ea-8832-2b96578e9245",data:"function App() {\n    return [\n        <p>Element 1</p>,\n        <p>Element 2</p>,\n        <p>Element 3</p>\n    ]\n}",pic:"",ratio:"4",highlight:""}}),c=new y({props:{data:'<p>The above code works. But react throws a warning <span style="background-color: black;"> Each child in a list should have a unique "key" prop. </span> This is because React need keys for elements in an array to identify which element  has been changed. You can learn more about keys in <span style="background-color: black;"> </span><span style="background-color: rgb(230, 0, 0);">React Keys </span> chapter. </p>'}}),i=new k({props:{language:"html",uid:"bb380f51-19c0-11ea-8832-2b96578e9245",data:'function App() {\n    return [\n        <p key="1">Element 1</p>,\n        <p key="2">Element 2</p>,\n        <p key="3">Element 3</p>\n    ]\n}',pic:"",ratio:"4",highlight:""}}),f=new y({props:{data:"<p>This code works without warnings.</p>"}}),u=new w({props:{data:"Using Aux helper",id:"usingAuxHelper"}}),d=new y({props:{data:"<p>To avoid manually add unique keys you can use an Aux helper.</p>"}}),h=new k({props:{language:"javascript",uid:"b3b57e60-19c1-11ea-8832-2b96578e9245",data:"/**\n * This is simple React component that return all its children.\n * @param props\n * @returns children of this component\n */\nfunction Aux(props) {\n    return props.children;\n}\n\nfunction App() {\n    return (\n        <Aux>\n            <p>Element 1</p>\n            <p>Element 2</p>\n            <p>Element 3</p>\n        </Aux>\n    )\n}",pic:"",ratio:"4",highlight:"6-8"}}),b=new y({props:{data:'<p>The function Aux is a react component that returns all its children. In this case the 3 <span style="background-color: black;"> p </span> tags are the children. </p><p><br></p><p>Click here to learn <span style="background-color: rgb(230, 0, 0);"> React Components </span> and <span style="background-color: rgb(230, 0, 0);"> React Props </span>.</p>'}}),E=new w({props:{data:"Return multiple JSX elements with React.Fragment",id:"returnMultipleJSXElementsWithReactFragment"}}),R=new y({props:{data:'<p><span style="background-color: black;"> React.Fragment </span> works with React 16.2 and above.</p>'}}),A=new k({props:{language:"html",uid:"16fc7671-19c4-11ea-8832-2b96578e9245",data:"function App() {\n    return (\n        <React.Fragment>\n            <p>Element 1</p>\n            <p>Element 2</p>\n            <p>Element 3</p>\n        </React.Fragment>\n    )\n}",pic:"",ratio:"4",highlight:""}}),x=new y({props:{data:"<p>We are also having a shortcut for the above code.</p>"}}),S=new k({props:{language:"html",uid:"7d4500a1-19c4-11ea-8832-2b96578e9245",data:"function App() {\n    return (\n        <>\n            <p>Element 1</p>\n            <p>Element 2</p>\n            <p>Element 3</p>\n        </>\n    )\n}",pic:"",ratio:"4",highlight:""}}),v=new y({props:{data:'<p>You can simply wrap multiline JSX in <span style="background-color: black;">&lt;&gt;</span>  <span style="background-color: black;">&lt;/&gt;</span></p>'}});return{c(){e(o.$$.fragment),e(l.$$.fragment),e(g.$$.fragment),e(c.$$.fragment),e(i.$$.fragment),e(f.$$.fragment),e(u.$$.fragment),e(d.$$.fragment),e(h.$$.fragment),e(b.$$.fragment),e(E.$$.fragment),e(R.$$.fragment),e(A.$$.fragment),e(x.$$.fragment),e(S.$$.fragment),e(v.$$.fragment)},l(e){n(o.$$.fragment,e),n(l.$$.fragment,e),n(g.$$.fragment,e),n(c.$$.fragment,e),n(i.$$.fragment,e),n(f.$$.fragment,e),n(u.$$.fragment,e),n(d.$$.fragment,e),n(h.$$.fragment,e),n(b.$$.fragment,e),n(E.$$.fragment,e),n(R.$$.fragment,e),n(A.$$.fragment,e),n(x.$$.fragment,e),n(S.$$.fragment,e),n(v.$$.fragment,e)},m(e,n){t(o,e,n),t(l,e,n),t(g,e,n),t(c,e,n),t(i,e,n),t(f,e,n),t(u,e,n),t(d,e,n),t(h,e,n),t(b,e,n),t(E,e,n),t(R,e,n),t(A,e,n),t(x,e,n),t(S,e,n),t(v,e,n),m=!0},p:a,i(e){m||(r(o.$$.fragment,e),r(l.$$.fragment,e),r(g.$$.fragment,e),r(c.$$.fragment,e),r(i.$$.fragment,e),r(f.$$.fragment,e),r(u.$$.fragment,e),r(d.$$.fragment,e),r(h.$$.fragment,e),r(b.$$.fragment,e),r(E.$$.fragment,e),r(R.$$.fragment,e),r(A.$$.fragment,e),r(x.$$.fragment,e),r(S.$$.fragment,e),r(v.$$.fragment,e),m=!0)},o(e){p(o.$$.fragment,e),p(l.$$.fragment,e),p(g.$$.fragment,e),p(c.$$.fragment,e),p(i.$$.fragment,e),p(f.$$.fragment,e),p(u.$$.fragment,e),p(d.$$.fragment,e),p(h.$$.fragment,e),p(b.$$.fragment,e),p(E.$$.fragment,e),p(R.$$.fragment,e),p(A.$$.fragment,e),p(x.$$.fragment,e),p(S.$$.fragment,e),p(v.$$.fragment,e),m=!1},d(e){s(o,e),s(l,e),s(g,e),s(c,e),s(i,e),s(f,e),s(u,e),s(d,e),s(h,e),s(b,e),s(E,e),s(R,e),s(A,e),s(x,e),s(S,e),s(v,e)}}}function A(a){let d,h,b;const w=new E({props:{$$slots:{default:[R]},$$scope:{ctx:a}}});return{c(){d=$("meta"),h=m(),e(w.$$.fragment),this.h()},l(e){const t=o('[data-svelte="svelte-7prcu9"]',document.head);d=l(t,"META",{name:!0,content:!0}),t.forEach(g),h=c(e),n(w.$$.fragment,e),this.h()},h(){document.title="Return multiple JSX elements in React",i(d,"name","description"),i(d,"content","Return multiple JSX elements in React")},m(e,n){f(document.head,d),u(e,h,n),t(w,e,n),b=!0},p(e,[n]){const t={};1&n&&(t.$$scope={dirty:n,ctx:e}),w.$set(t)},i(e){b||(r(w.$$.fragment,e),b=!0)},o(e){p(w.$$.fragment,e),b=!1},d(e){g(d),e&&g(h),s(w,e)}}}export default class extends d{constructor(e){super(),h(this,e,null,A,b,{})}}
